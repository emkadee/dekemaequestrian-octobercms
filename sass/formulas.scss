@each $colorName, $color in $colors {

    .bg_#{$colorName} {
        background-color: $color;

        @if (lightness($color)<50) {
            // fails with > 50 or < 50
            color: #fff;
        }

        @else {
            color: $quiColor;
        }

        .card {
            border: 1px darken($color, 10) solid !important;
            border-color: darken($color, 18);
            background-color: lighten($color, 35);

            .card-footer {
                background-color: lighten($color, 35);
            }
        }
    }

    .bg_#{$colorName}_light {
        background-color: lighten($color, 25%);
    }
}


@each $colorName, $color in $colors {

    .btn-#{$colorName} {
        background-color: $color;
        border-color: darken($color, 10) !important;

        @if (lightness($color)<50) {
            // fails with > 50 or < 50
            color: #fff;
        }

        @else {
            color: $quiColor;
        }
    }

    .btn-#{$colorName}:hover {
        background-color: darken($color, 10);
        border-color: darken($color, 10) !important;

        @if (lightness($color)<50) {
            // fails with > 50 or < 50
            color: #fff;
        }

        @else {
            color: $quiColor;
        }
    }

    .btn-#{$colorName}:active {
        background-color: #fff;
        border-color: darken($color, 10) !important;
        color: #e0e0e0 !important;
    }

}


/* Media Queries */
$media_queries : ('xs' : unquote("only screen and (max-width: 576px)"),
    'sm' : unquote("only screen and (min-width: 577px) and (max-width: 768px)"),
    'md' : unquote("only screen and (min-width: 769px) and (max-width: 992px)"),
    'lg' : unquote("only screen and (min-width: 993px) and (max-width: 1200px)"),
    'xl' : unquote("only screen and (min-width: 1200px)"));

@mixin for_breakpoint($breakpoints) {
    $conditions : ();

    @each $breakpoint in $breakpoints {
        // If the key exists in the map
        $conditions: append($conditions,
                #{inspect(map-get($media_queries, $breakpoint))},
                comma);
    }

    @media #{$conditions} {
        @content;
    }
}









.btn-quinary-darken {
    background-color: #25241f !important;
    border-color: #25241f !important;
    color: #fff;
}

.btn-quinary-darken:hover {
    background-color: #12110f !important;
    border-color: #12110f !important;
    color: #fff;
}

.btn-quinary-darken:active {
    background-color: #fff;
    border-color: #12110f !important;
    color: #12110f !important;
}